name: Sync Assigned Issues to Target Project

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # Run every day at midnight UTC

jobs:
  sync_issues:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm install @actions/github

      - name: Sync Issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          const { Octokit } = require("@octokit/rest");
          const github = new Octokit({ auth: process.env.GITHUB_TOKEN });

          const getIssueIDs = async (projectId) => {
            const response = await github.projects.listCards({
              project_id: projectId
            });

            return response.data
              .filter(card => card.content_url.includes("/issues/"))
              .map(card => card.content_url.split("/").pop());
          };

          const syncIssues = async (issueIDs, projectId) => {
            for (const issueID of issueIDs) {
              await github.projects.createCard({
                project_id: projectId,
                content_type: "Issue",
                content_id: issueID
              });
            }
          };

          const targetProjectId = "6";
          const sourceProjectIds = ["1", "2"];
          const assigneeList = ["a-camarillo", "jennaxiao3", "aqvilala", "raymondOT", "jshii117", "lilyxmeng", "razlze", "leafie8"];

          const assigneeIssues = [];

          for (const projectId of sourceProjectIds) {
            const issueIDs = await getIssueIDs(projectId);

            for (const issueID of issueIDs) {
              const issue = await github.issues.get({
                issue_number: issueID,
              });

              if (assigneeList.includes(issue.data.assignee.login)) {
                assigneeIssues.push(issueID);
              }
            }
          }

          await syncIssues(assigneeIssues, targetProjectId);
